    MOV R13, #0x800       ; initialize stack pointer
    B Main

ExampleString        ; start of packed string 
	DCD	#0x53595343	; ‘S’=0x53   ‘Y’=0x59   ‘S’=0x53   ‘C’=0x43
	DCD	#0x20333030
	DCD	#0x36210000	; 1st 00 is the null-terminator, 2nd 00 is just padding to fill the word

;  char   CharAt ( &( PackedString[] ), uint charIndex  )
;  accepts    R0 = address of PackedString[] (by reference), 
;             R1 = charIndex (by value)
;  returns    R0 = PackedString[ charIndex ]
CharAt
  PUSH { R1, R2, R3, R4, R14 }    ; save registers (SYSC 3006 Register Preservation convention)

; ----   start of block copied from Fragment 1   ----

;             copy the indicated block from your Fragment solution here

; ----   end of block copied from Fragment 1   ----

  POP { R1, R2, R3, R4, R15 }    ; restore registers and return (SYSC 3006 Register Preservation convention)


Main
  
; R2 will be used as a character index into ExampleString
; R2 = 0     
  MOV  R2, #0
  
; for ( R0 = CharAt( &(ExampleString), R2 ); R0 != null; R0 = CharAt( &(ExampleString), ++R2 ) )
TestFor
  ; set up to call CharAt
  ; get address of ExampleString
	LDR  R0, [ ExampleString ]
  ; get character index 
    MOV  R1, R2
	
    BL   CharAt    ; R0 = CharAt( &(ExampleString), R2 )
    
	CMP  R0, #0	   ; if character = null ... then done for loop
	BEQ  DoneFor

    ADD  R2, R2, #1
    B    TestFor   ; get and test next char

DoneFor
; at this point, R2 contains the number of characters in ExampleString

  DCD  #0xFFFFFFFF		; stop

